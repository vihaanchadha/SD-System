{"ast":null,"code":"var _jsxFileName = \"/Users/vihaanchadha/sd-system/frontend/src/components/DeploymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, FormControl, InputLabel, Select, MenuItem, Container, Typography, Box } from \"@mui/material\";\nimport { getClients, getPackages, createDeployment } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeploymentForm = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [packages, setPackages] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(\"\");\n  const [selectedPackage, setSelectedPackage] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const clientsRes = await getClients();\n        const packagesRes = await getPackages();\n        setClients(clientsRes.data);\n        setPackages(packagesRes.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleDeployment = async () => {\n    try {\n      await createDeployment({\n        client: selectedClient,\n        package: selectedPackage,\n        status: \"pending\"\n      });\n      alert(\"Deployment created successfully!\");\n      setSelectedClient(\"\");\n      setSelectedPackage(\"\");\n    } catch (error) {\n      console.error(\"Error creating deployment:\", error);\n      alert(\"Failed to create deployment\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 2,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Create Deployment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Select Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedClient,\n          label: \"Select Client\",\n          onChange: e => setSelectedClient(e.target.value),\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: client.id,\n            children: [client.hostname, \" (\", client.ip_address, \")\"]\n          }, client.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Select Package\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedPackage,\n          label: \"Select Package\",\n          onChange: e => setSelectedPackage(e.target.value),\n          children: packages.map(pkg => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: pkg.id,\n            children: [pkg.name, \" - \", pkg.version]\n          }, pkg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleDeployment,\n        disabled: !selectedClient || !selectedPackage,\n        children: \"Create Deployment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(DeploymentForm, \"cvkOhhieBi6RYm9Ke+dk0oA0t/Y=\");\n_c = DeploymentForm;\nexport default DeploymentForm;\nvar _c;\n$RefreshReg$(_c, \"DeploymentForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","FormControl","InputLabel","Select","MenuItem","Container","Typography","Box","getClients","getPackages","createDeployment","jsxDEV","_jsxDEV","DeploymentForm","_s","clients","setClients","packages","setPackages","selectedClient","setSelectedClient","selectedPackage","setSelectedPackage","fetchData","clientsRes","packagesRes","data","error","console","handleDeployment","client","package","status","alert","maxWidth","children","sx","display","flexDirection","gap","mt","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","value","label","onChange","e","target","map","id","hostname","ip_address","pkg","name","version","color","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/vihaanchadha/sd-system/frontend/src/components/DeploymentForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Container,\n  Typography,\n  Box,\n} from \"@mui/material\";\nimport { getClients, getPackages, createDeployment } from \"../api\";\n\nconst DeploymentForm = () => {\n  const [clients, setClients] = useState([]);\n  const [packages, setPackages] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(\"\");\n  const [selectedPackage, setSelectedPackage] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const clientsRes = await getClients();\n        const packagesRes = await getPackages();\n        setClients(clientsRes.data);\n        setPackages(packagesRes.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleDeployment = async () => {\n    try {\n      await createDeployment({\n        client: selectedClient,\n        package: selectedPackage,\n        status: \"pending\",\n      });\n\n      alert(\"Deployment created successfully!\");\n      setSelectedClient(\"\");\n      setSelectedPackage(\"\");\n    } catch (error) {\n      console.error(\"Error creating deployment:\", error);\n      alert(\"Failed to create deployment\");\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2, mt: 4 }}>\n        <Typography variant=\"h4\">Create Deployment</Typography>\n\n        <FormControl fullWidth>\n          <InputLabel>Select Client</InputLabel>\n          <Select\n            value={selectedClient}\n            label=\"Select Client\"\n            onChange={(e) => setSelectedClient(e.target.value)}\n          >\n            {clients.map((client) => (\n              <MenuItem key={client.id} value={client.id}>\n                {client.hostname} ({client.ip_address})\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth>\n          <InputLabel>Select Package</InputLabel>\n          <Select\n            value={selectedPackage}\n            label=\"Select Package\"\n            onChange={(e) => setSelectedPackage(e.target.value)}\n          >\n            {packages.map((pkg) => (\n              <MenuItem key={pkg.id} value={pkg.id}>\n                {pkg.name} - {pkg.version}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleDeployment}\n          disabled={!selectedClient || !selectedPackage}\n        >\n          Create Deployment\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default DeploymentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}